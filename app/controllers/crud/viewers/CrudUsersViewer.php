<?php
namespace controllers\crud\viewers;

use Ajax\semantic\html\elements\HtmlLabel;
use Ubiquity\controllers\crud\viewers\ModelViewer;
 /**
  * Class CrudUsersViewer
  */
class CrudUsersViewer extends ModelViewer{
	public function getCaptions($captions, $className)
    {
        return ['Nom', 'PrÃ©nom', 'Email', 'Suspendu ?', 'Groupes'];
    }

    public function getModelDataTable($instances, $model, $totalCount, $page = 1)
    {
        $dt = parent::getModelDataTable($instances, $model, $totalCount, $page);
        return $dt;
    }

    public function recordsPerPage($model, $totalCount = 0)
    {
        return 50;
    }

    public function getDataTableRowButtons()
    {
        return ['display', 'edit', 'delete'];
    }

    public function getModelDataElement($instance, $model, $modal)
    {
        $de = parent::getModelDataElement($instance, $model, $modal); // TODO: Change the autogenerated stub
        $de->setValueFunction('groups', function ($v, $instance){
            return HtmlLabel::tag('', count($v));
        });
        return $de;
    }

    public function getElementCaptions($captions, $className, $instance)
    {
        return ['id', 'firstname', 'lastname', 'email', 'password', 'suspended', 'prganization', 'groups'];
    }

    public function isModal($objects, $model)
    {
        return true;
    }

    public function getForm($identifier, $instance, $updateUrl = 'updateModel')
    {
        $df = parent::getForm($identifier, $instance, $updateUrl);
        return $df;
    }

    public function getFormCaptions($captions, $className, $instance)
    {
        return ['firstname', 'lastname', 'email', 'suspended', 'groups'];
    }


}
